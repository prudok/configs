[
    {
      "key": "shift+h",
      "command": "workbench.action.previousEditor",
      "when": "vim.mode != 'Insert' && editorTextFocus"
    },
    {
      "key": "cmd+n",
      "command": "runCommands",
      "args": {
        "commands": [
          "editor.action.marker.prevInFiles",
          "deleteWordLeft",
          "closeMarkersNavigation",
          "workbench.action.focusActiveEditorGroup"
        ]
      }
    },
    {
      "key": "shift+l",
      "command": "workbench.action.nextEditor",
      "when": "vim.mode != 'Insert' && editorTextFocus"
    },
    {
      "key": "cmd+\\ cmd+/",
      "command": "workbench.action.showAllSymbols"
    },
    {
      "key": "cmd+t",
      "command": "-workbench.action.showAllSymbols"
    },
    {
      "key": "cmd+` shift",
      "command": "workbench.action.terminal.new",
      "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
      "key": "ctrl+shift+`",
      "command": "-workbench.action.terminal.new",
      "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
      "key": "cmd+t",
      "command": "workbench.action.terminal.toggleTerminal",
      "when": "terminal.active"
    },
    {
      "key": "ctrl+`",
      "command": "-workbench.action.terminal.toggleTerminal",
      "when": "terminal.active"
    },
    {
      "key": "ctrl+shift+]",
      "command": "editor.action.smartSelect.shrink",
      "when": "editorTextFocus"
    },
    {
      "key": "ctrl+shift+left",
      "command": "-editor.action.smartSelect.shrink",
      "when": "editorTextFocus"
    },
    {
      "key": "ctrl+shift+r",
      "command": "-editor.action.refactor",
      "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
      "key": "cmd+f",
      "command": "workbench.files.action.focusFilesExplorer",
      "when": "!filesExplorerFocus && !suggestWidgetVisible && vim.mode != 'Insert'"
    },
    {
      "key": "ctrl+n",
      "command": "-workbench.files.action.focusFilesExplorer",
      "when": "sideBarVisible && !filesExplorerFocus && !suggestWidgetVisible && vim.mode != 'Insert'"
    },
    {
      "key": "alt+` alt+/",
      "command": "workbench.action.files.newUntitledFile"
    },
    {
      "key": "cmd+n",
      "command": "-workbench.action.files.newUntitledFile"
    },
    {
      "key": "cmd+f",
      "command": "workbench.files.action.focusFilesExplorer",
      "when": "sideBarVisible && !filesExplorerFocus && !suggestWidgetVisible && vim.mode != 'Insert'"
    },
    {
      "key": "ctrl+n",
      "command": "-workbench.files.action.focusFilesExplorer",
      "when": "!sideBarVisible && !suggestWidgetVisible && vim.mode != 'Insert'"
    },
    {
      "key": "down",
      "command": "workbench.action.quickOpenSelectNext",
      "when": "inQuickOpen"
    },
    {
      "key": "ctrl+n",
      "command": "-workbench.action.quickOpenSelectNext",
      "when": "inQuickOpen"
    },
    {
      "key": "cmd+s",
      "command": "editor.action.triggerSuggest",
      "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible && vim.mode == 'Insert'"
    },
    {
      "key": "ctrl+n",
      "command": "-editor.action.triggerSuggest",
      "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible && vim.mode == 'Insert'"
    },
    {
      "key": "ctrl+n",
      "command": "-cursorDown",
      "when": "textInputFocus"
    },
    {
      "key": "= ]",
      "command": "extension.vim_ctrl+n",
      "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
      "key": "ctrl+n",
      "command": "-extension.vim_ctrl+n",
      "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
      "key": "ctrl+n",
      "command": "-list.focusDown",
      "when": "listFocus && !inputFocus"
    },
    {
      "key": "down",
      "command": "selectNextCodeAction",
      "when": "codeActionMenuVisible"
    },
    {
      "key": "ctrl+n",
      "command": "-selectNextCodeAction",
      "when": "codeActionMenuVisible"
    },
    {
      "key": "cmd+f",
      "command": "nerdtree.unfocusSidebarOrClose",
      "when": "filesExplorerFocus && sideBarVisible"
    },
    {
      "key": "ctrl+n",
      "command": "-nerdtree.unfocusSidebarOrClose",
      "when": "filesExplorerFocus && sideBarVisible"
    },
    {
      "key": "down",
      "command": "selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
      "key": "ctrl+n",
      "command": "-selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
      "key": "down",
      "command": "selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus && vim.mode == 'Insert'"
    },
    {
      "key": "ctrl+n",
      "command": "-selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus && vim.mode == 'Insert'"
    },
    {
      "key": "down",
      "command": "showNextParameterHint",
      "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
      "key": "ctrl+n",
      "command": "-showNextParameterHint",
      "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
      "key": "shift+cmd+t",
      "command": "workbench.action.newWindow"
    },
    {
      "key": "shift+cmd+n",
      "command": "-workbench.action.newWindow"
    },
    {
      "key": "cmd+m",
      "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
      "when": "!activeEditorGroupEmpty"
    },
    {
      "key": "ctrl+tab",
      "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
      "when": "!activeEditorGroupEmpty"
    },
    {
      "key": "cmd+m",
      "command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
      "when": "!activeEditorGroupEmpty"
    },
    {
      "key": "ctrl+shift+tab",
      "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
      "when": "!activeEditorGroupEmpty"
    },
    {
      "key": "cmd+m",
      "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
      "when": "inEditorsPicker && inQuickOpen"
    },
    {
      "key": "ctrl+shift+tab",
      "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
      "when": "inEditorsPicker && inQuickOpen"
    },
    {
      "key": "cmd+m",
      "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
      "when": "inEditorsPicker && inQuickOpen"
    },
    {
      "key": "ctrl+tab",
      "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
      "when": "inEditorsPicker && inQuickOpen"
    },
    {
      "key": "space c",
      "command": "workbench.action.closeActiveEditor",
      "when": "vim.mode != 'Insert' && editorTextFocus || filesExplorerFocus"
    },
    {
      "key": "cmd+w",
      "command": "-workbench.action.closeActiveEditor"
    },
    {
      "key": "shift+cmd+f",
      "command": "notebook.formatCell",
      "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
      "key": "shift+alt+f",
      "command": "-notebook.formatCell",
      "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
      "key": "shift+cmd+f",
      "command": "editor.action.formatDocument",
      "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
      "key": "shift+alt+f",
      "command": "-editor.action.formatDocument",
      "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
      "key": "shift+cmd+f",
      "command": "editor.action.formatDocument.none",
      "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
      "key": "shift+alt+f",
      "command": "-editor.action.formatDocument.none",
      "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
      "key": "shift+cmd+f",
      "command": "notebook.format",
      "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
      "key": "shift+alt+f",
      "command": "-notebook.format",
      "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
      "key": "shift+cmd+f",
      "command": "filesExplorer.findInFolder",
      "when": "explorerResourceIsFolder && explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
      "key": "shift+alt+f",
      "command": "-filesExplorer.findInFolder",
      "when": "explorerResourceIsFolder && explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
      "key": "shift+cmd+f",
      "command": "-workbench.view.search",
      "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
    },
    {
      "key": "shift+alt+f",
      "command": "workbench.action.terminal.searchWorkspace",
      "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
      "key": "shift+cmd+f",
      "command": "-workbench.action.terminal.searchWorkspace",
      "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
      "key": "shift+cmd+f",
      "command": "-workbench.action.findInFiles"
    },
    {
      "key": "cmd+r",
      "command": "editor.action.changeAll",
      "when": "editorTextFocus && !editorReadonly"
    },
    {
      "key": "cmd+f2",
      "command": "-editor.action.changeAll",
      "when": "editorTextFocus && !editorReadonly"
    },
    {
      "key": "cmd+p",
      "command": "-workbench.action.quickOpen"
    },
    {
      "key": "cmd+f",
      "command": "workbench.action.quickOpenNavigateNextInFilePicker",
      "when": "inFilesPicker && inQuickOpen"
    },
    {
      "key": "cmd+p",
      "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
      "when": "inFilesPicker && inQuickOpen"
    },
    {
      "key": "cmd+[ cmd+'",
      "command": "extension.goto-previous-buffer"
    },
    {
      "key": "cmd+p",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "shift+cmd+p",
      "command": "-workbench.action.showCommands"
    },
    {
      "key": "cmd+s",
      "command": "-workbench.action.files.save"
    },
    {
      "key": "cmd+s",
      "command": "workbench.action.interactivePlayground.arrowDown",
      "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
      "key": "down",
      "command": "-workbench.action.interactivePlayground.arrowDown",
      "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
      "key": "down",
      "command": "-showNextParameterHint",
      "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
      "key": "cmd+s",
      "command": "workbench.banner.focusNextAction",
      "when": "bannerFocused"
    },
    {
      "key": "down",
      "command": "-workbench.banner.focusNextAction",
      "when": "bannerFocused"
    },
    {
      "key": "down",
      "command": "-selectNextCodeAction",
      "when": "codeActionMenuVisible"
    },
    {
      "key": "up",
      "command": "selectPrevCodeAction",
      "when": "codeActionMenuVisible"
    },
    {
      "key": "cmd+up",
      "command": "-selectPrevCodeAction",
      "when": "codeActionMenuVisible"
    },
    {
      "key": "down",
      "command": "-selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
      "key": "up",
      "command": "-selectPrevCodeAction",
      "when": "codeActionMenuVisible"
    },
    {
      "key": "cmd+k",
      "command": "selectPrevSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
      "key": "up",
      "command": "-selectPrevSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
      "key": "alt+f8",
      "command": "-editor.action.marker.next",
      "when": "editorFocus"
    },
    {
      "key": "cmd+f",
      "command": "-actions.find",
      "when": "editorFocus || editorIsOpen"
    },
    {
      "key": "cmd+f",
      "command": "-settings.action.search",
      "when": "inSettingsEditor"
    },
    {
      "key": "cmd+f",
      "command": "-problems.action.focusFilter",
      "when": "focusedView == 'workbench.panel.markers.view'"
    },
    {
      "key": "cmd+f",
      "command": "-notebook.find",
      "when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
      "key": "cmd+f",
      "command": "-list.find",
      "when": "listFocus && listSupportsFind"
    },
    {
      "key": "cmd+f",
      "command": "-repl.action.filter",
      "when": "inDebugRepl && textInputFocus"
    },
    {
      "key": "cmd+f",
      "command": "-keybindings.editor.searchKeybindings",
      "when": "inKeybindings"
    },
    {
      "key": "cmd+f",
      "command": "-workbench.action.terminal.focusFind",
      "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
      "key": "cmd+f",
      "command": "-commentsFocusFilter",
      "when": "focusedView == 'workbench.panel.comments'"
    },
    {
      "key": "cmd+f",
      "command": "-editor.action.extensioneditor.showfind",
      "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
    },
    {
      "key": "cmd+f",
      "command": "-editor.action.webvieweditor.showFind",
      "when": "webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
      "key": "cmd+k",
      "command": "editor.action.selectPreviousStickyScrollLine",
      "when": "stickyScrollFocused"
    },
    {
      "key": "up",
      "command": "-editor.action.selectPreviousStickyScrollLine",
      "when": "stickyScrollFocused"
    },
    {
      "key": "down",
      "command": "-cursorDown",
      "when": "textInputFocus"
    },
    {
      "key": "down",
      "command": "editor.action.selectNextStickyScrollLine",
      "when": "stickyScrollFocused"
    },
    {
      "key": "down",
      "command": "-editor.action.selectNextStickyScrollLine",
      "when": "stickyScrollFocused"
    },
    {
      "key": "down",
      "command": "-list.focusDown",
      "when": "listFocus && !inputFocus"
    },
    {
      "key": "down",
      "command": "selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
      "key": "down",
      "command": "-selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
      "key": "down",
      "command": "workbench.statusBar.focusNext",
      "when": "statusBarFocused"
    },
    {
      "key": "down",
      "command": "-workbench.statusBar.focusNext",
      "when": "statusBarFocused"
    },
    {
      "key": "down",
      "command": "workbench.action.terminal.selectNextSuggestion",
      "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
      "key": "down",
      "command": "-workbench.action.terminal.selectNextSuggestion",
      "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
      "key": "down",
      "command": "settings.action.focusSettingsFromSearch",
      "when": "inSettingsSearch && !suggestWidgetVisible"
    },
    {
      "key": "down",
      "command": "-settings.action.focusSettingsFromSearch",
      "when": "inSettingsSearch && !suggestWidgetVisible"
    },
    {
      "key": "down",
      "command": "breadcrumbs.selectFocused",
      "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
      "key": "down",
      "command": "-breadcrumbs.selectFocused",
      "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
      "key": "down",
      "command": "editor.action.scrollDownHover",
      "when": "editorHoverFocused"
    },
    {
      "key": "down",
      "command": "-editor.action.scrollDownHover",
      "when": "editorHoverFocused"
    },
    {
      "key": "down",
      "command": "notebook.focusNextEditor",
      "when": "config.notebook.navigation.allowNavigateToSurroundingCells && inlineChatFocused && inlineChatInnerCursorLast && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
    },
    {
      "key": "down",
      "command": "-notebook.focusNextEditor",
      "when": "config.notebook.navigation.allowNavigateToSurroundingCells && inlineChatFocused && inlineChatInnerCursorLast && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
    },
    {
      "key": "down",
      "command": "inlineChat.focus",
      "when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above'"
    },
    {
      "key": "down",
      "command": "-inlineChat.focus",
      "when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above'"
    },
    {
      "key": "down",
      "command": "notebook.focusNextEditor",
      "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
    },
    {
      "key": "down",
      "command": "-notebook.focusNextEditor",
      "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
    },
    {
      "key": "down",
      "command": "notebook.focusNextEditor",
      "when": "config.notebook.navigation.allowNavigateToSurroundingCells && inlineChatFocused && inlineChatInnerCursorLast && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
    },
    {
      "key": "down",
      "command": "-notebook.focusNextEditor",
      "when": "config.notebook.navigation.allowNavigateToSurroundingCells && inlineChatFocused && inlineChatInnerCursorLast && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
    },
    {
      "key": "down",
      "command": "notebook.focusNextEditor",
      "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
    },
    {
      "key": "down",
      "command": "-notebook.focusNextEditor",
      "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
    },
    {
      "key": "down",
      "command": "extension.vim_down",
      "when": "editorTextFocus && vim.active && !inDebugRepl && !parameterHintsVisible && !suggestWidgetVisible"
    },
    {
      "key": "down",
      "command": "-extension.vim_down",
      "when": "editorTextFocus && vim.active && !inDebugRepl && !parameterHintsVisible && !suggestWidgetVisible"
    },
    {
      "key": "down",
      "command": "history.showNext",
      "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
    },
    {
      "key": "down",
      "command": "-history.showNext",
      "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
    },
    {
      "key": "down",
      "command": "inlineChat.arrowOutDown",
      "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor"
    },
    {
      "key": "down",
      "command": "-inlineChat.arrowOutDown",
      "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor"
    },
    {
      "key": "down",
      "command": "interactive.history.next",
      "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
    },
    {
      "key": "down",
      "command": "-interactive.history.next",
      "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
    },
    {
      "key": "down",
      "command": "notifications.focusNextToast",
      "when": "notificationFocus && notificationToastsVisible"
    },
    {
      "key": "down",
      "command": "-notifications.focusNextToast",
      "when": "notificationFocus && notificationToastsVisible"
    },
    {
      "key": "down",
      "command": "scm.viewNextCommit",
      "when": "scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
    },
    {
      "key": "down",
      "command": "-scm.viewNextCommit",
      "when": "scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
    },
    {
      "key": "down",
      "command": "settings.action.focusSettingsFile",
      "when": "inSettingsSearch && !suggestWidgetVisible"
    },
    {
      "key": "down",
      "command": "-settings.action.focusSettingsFile",
      "when": "inSettingsSearch && !suggestWidgetVisible"
    },
    {
      "key": "cmd+r",
      "command": "editor.action.rename",
      "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
      "key": "f2",
      "command": "-editor.action.rename",
      "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
      "key": "shift+cmd+\\",
      "command": "flutter.hotRestart"
    },
    {
      "key": "shift+cmd+s",
      "command": "-workbench.action.files.saveAs"
    },
    {
      "key": "shift+cmd+s",
      "command": "-workbench.action.files.saveLocalFile",
      "when": "remoteFileDialogVisible"
    },
    {
      "key": "alt+cmd+r",
      "command": "-revealFileInOS",
      "when": "!editorFocus"
    },
    {
      "key": "shift+cmd+o",
      "command": "editor.action.organizeImports",
      "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
    },
    {
      "key": "shift+alt+o",
      "command": "-editor.action.organizeImports",
      "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
    },
    {
      "key": "g e",
      "command": "editor.action.marker.next",
      "when": "editorFocus && vim.mode != 'Insert' && !findWidgetVisible && !renameInputVisible"
    },
    {
      "key": "g d",
      "command": "editor.action.revealDefinition",
      "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor && vim.mode != 'Insert' && !findWidgetVisible"
    },
    {
      "key": "g g",
      "command": "cursorTop",
      "when": "vim.mode != 'Insert' && !findWidgetVisible && !renameInputVisible && editorTextFocus"
    },
    {
      "key": "f12",
      "command": "-editor.action.revealDefinition",
      "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
      "key": "cmd+e",
      "command": "-actions.findWithSelection"
    },
    {
      "key": "/",
      "command": "actions.find",
      "when": "vim.mode != 'Insert' && textInputFocus && editorTextFocus"
    },
    {
      "key": "cmd+up",
      "command": "-cursorTop",
      "when": "textInputFocus"
    },
    {
      "key": "cmd+up",
      "command": "-editor.action.goToTopHover",
      "when": "editorHoverFocused"
    },
    {
      "key": "shift+cmd+e",
      "command": "-workbench.view.explorer",
      "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
      "key": "shift+cmd+m",
      "command": "workbench.action.debug.continue",
      "when": "debugState == 'stopped'"
    },
    {
      "key": "f5",
      "command": "-workbench.action.debug.continue",
      "when": "debugState == 'stopped'"
    },
    {
      "key": "cmd+f",
      "command": "workbench.explorer.fileView.focus",
      "when": "sideBarVisible && !filesExplorerFocus && !suggestWidgetVisible && vim.mode != 'Insert'"
    },
    {
      "key": "cmd+t",
      "command": "workbench.action.terminal.focusAccessibleBuffer",
      "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated && terminalTabFocusMode || accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated && !terminalAccessibleBufferFocus || accessibilityModeEnabled && terminalFocus && terminalProcessSupported && terminalTabFocusMode || accessibilityModeEnabled && terminalFocus && terminalProcessSupported && !terminalAccessibleBufferFocus"
    },
    {
      "key": "shift+tab",
      "command": "-workbench.action.terminal.focusAccessibleBuffer",
      "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated && terminalTabFocusMode || accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated && !terminalAccessibleBufferFocus || accessibilityModeEnabled && terminalFocus && terminalProcessSupported && terminalTabFocusMode || accessibilityModeEnabled && terminalFocus && terminalProcessSupported && !terminalAccessibleBufferFocus"
    },
    {
      "key": "cmd+5",
      "command": "-workbench.action.focusFifthEditorGroup"
    },
    {
      "key": "cmd+5",
      "command": "workbench.debug.action.toggleRepl",
      "when": "workbench.panel.repl.view.active"
    },
    {
      "key": "shift+cmd+y",
      "command": "-workbench.debug.action.toggleRepl",
      "when": "workbench.panel.repl.view.active"
    },
    {
      "key": "cmd+,",
      "command": "workbench.action.toggleSidebarVisibility"
    },
    {
      "key": "cmd+b",
      "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
      "key": "cmd+i",
      "command": "-inlineChat.start",
      "when": "inlineChatHasProvider && !editorReadonly"
    },
    {
      "key": "cmd+i",
      "command": "-editor.action.triggerSuggest",
      "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
      "key": "cmd+i",
      "command": "-focusSuggestion",
      "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
      "key": "cmd+i",
      "command": "-toggleSuggestionDetails",
      "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
      "key": "down",
      "command": "history.showNext",
      "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
    },
    {
      "key": "down",
      "command": "-history.showNext",
      "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
    },
    {
      "key": "down",
      "command": "iconSelectBox.focusDown",
      "when": "iconSelectBoxFocus"
    },
    {
      "key": "down",
      "command": "-iconSelectBox.focusDown",
      "when": "iconSelectBoxFocus"
    },
    {
      "key": "shift+cmd+9",
      "command": "workbench.action.reloadWindow",
      "when": "false"
    },
    {
      "key": "cmd+r",
      "command": "-workbench.action.reloadWindow",
      "when": "isDevelopment"
    },
    {
      "key": "shift+cmd+6",
      "command": "-coverage-gutters.previewCoverageReport"
    },
    {
      "key": "shift+cmd+6",
      "command": "-breadcrumbs.focus",
      "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
      "key": "shift+cmd+r",
      "command": "-rerunSearchEditorSearch",
      "when": "inSearchEditor"
    },
    {
      "key": "f10",
      "command": "-workbench.action.debug.stepOver",
      "when": "debugState == 'stopped'"
    },
    {
      "key": "shift+cmd+[Quote]",
      "command": "editor.action.inlineSuggest.trigger",
      "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus"
    },
    {
      "key": "alt+\\",
      "command": "-editor.action.inlineSuggest.trigger",
      "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
    },
    {
      "key": "ctrl+enter",
      "command": "-github.copilot.generate",
      "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
    },
    {
      "key": "cmd+0",
      "command": "-workbench.action.focusSideBar"
    },
    {
      "key": "alt+]",
      "command": "-github.copilot.nextPanelSolution",
      "when": "github.copilot.activated && github.copilot.panelVisible"
    },
    {
      "key": "alt+[",
      "command": "-github.copilot.previousPanelSolution",
      "when": "github.copilot.activated && github.copilot.panelVisible"
    },
    {
      "key": "alt+[",
      "command": "-editor.action.inlineSuggest.showPrevious",
      "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
      "key": "alt+]",
      "command": "-editor.action.inlineSuggest.showNext",
      "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
      "key": "cmd+9",
      "command": "-workbench.action.lastEditorInGroup"
    },
    {
      "key": "cmd+k cmd+s",
      "command": "git.stageSelectedRanges",
      "when": "isInDiffEditor && !operationInProgress"
    },
    {
      "key": "cmd+k alt+cmd+s",
      "command": "-git.stageSelectedRanges",
      "when": "isInDiffEditor && !operationInProgress"
    },
    {
      "key": "cmd+k cmd+u",
      "command": "git.unstageSelectedRanges",
      "when": "isInDiffEditor && !operationInProgress"
    },
    {
      "key": "cmd+k cmd+n",
      "command": "-git.unstageSelectedRanges",
      "when": "isInDiffEditor && !operationInProgress"
    },
    {
      "key": "shift+cmd+c",
      "command": "-workbench.action.terminal.openNativeConsole",
      "when": "!terminalFocus"
    },
    {
      "key": "shift+cmd+\\",
      "command": "-editor.action.jumpToBracket",
      "when": "editorTextFocus"
    },
    {
      "key": "cmd+1",
      "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
      "key": "cmd+1",
      "command": "workbench.actions.view.problems",
      "when": "workbench.panel.markers.view.active"
    },
    {
      "key": "shift+cmd+m",
      "command": "-workbench.actions.view.problems",
      "when": "workbench.panel.markers.view.active"
    },
    {
      "key": "cmd+2",
      "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
      "key": "cmd+2",
      "command": "workbench.view.scm",
      "when": "workbench.scm.active"
    },
    {
      "key": "ctrl+shift+g",
      "command": "-workbench.view.scm",
      "when": "workbench.scm.active"
    },
    {
      "key": "shift+cmd+,",
      "command": "-editor.action.inPlaceReplace.up",
      "when": "editorTextFocus && !editorReadonly"
    },
    {
      "key": "shift+cmd+,",
      "command": "workbench.action.debug.stepOver"
    },
    {
      "key": "shift+cmd+.",
      "command": "-breadcrumbs.focusAndSelect",
      "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
      "key": "shift+cmd+.",
      "command": "-editor.action.inPlaceReplace.down",
      "when": "editorTextFocus && !editorReadonly"
    },
    {
      "key": "shift+cmd+.",
      "command": "-editor.action.accessibleViewGoToSymbol",
      "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
    },
    {
      "key": "shift+cmd+.",
      "command": "-breadcrumbs.toggleToOn",
      "when": "!config.breadcrumbs.enabled"
    },
    {
      "key": "shift+cmd+.",
      "command": "workbench.action.debug.stepInto",
      "when": "debugState != 'inactive'"
    },
    {
      "key": "f11",
      "command": "-workbench.action.debug.stepInto",
      "when": "debugState != 'inactive'"
    },
    {
      "key": "shift+cmd+c",
      "command": "workbench.action.closeAllEditors"
    },
    {
      "key": "cmd+k cmd+w",
      "command": "-workbench.action.closeAllEditors"
    },
    {
      "key": "shift+cmd+r",
      "command": "references-view.findReferences",
      "when": "editorHasReferenceProvider"
    },
    {
      "key": "shift+alt+f12",
      "command": "-references-view.findReferences",
      "when": "editorHasReferenceProvider"
    },
    {
      "key": "ctrl+alt+d",
      "command": "-dart.openDevTools",
      "when": "dart-code:anyProjectLoaded"
    },
    {
      "key": "cmd+w",
      "command": "-workbench.action.terminal.killEditor",
      "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
    },
    {
      "key": "cmd+w",
      "command": "-workbench.action.closeWindow",
      "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
      "key": "cmd+w",
      "command": "-workbench.action.closeGroup",
      "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
      "key": "cmd+w",
      "command": "workbench.action.closeActiveEditor",
      "when": "filesExplorerFocus || editorTextFocus && vim.mode != 'Insert'"
    },
    {
      "key": "cmd+6",
      "command": "-workbench.action.focusSixthEditorGroup"
    },
    {
      "key": "cmd+6",
      "command": "workbench.view.debug",
      "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
      "key": "shift+cmd+d",
      "command": "-workbench.view.debug",
      "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
      "key": "shift+cmd+n",
      "command": "workbench.action.debug.start",
      "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
      "key": "f5",
      "command": "-workbench.action.debug.start",
      "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
      "key": "cmd+l",
      "command": "-expandLineSelection",
      "when": "textInputFocus"
    },
    {
      "key": "cmd+]",
      "command": "editor.action.smartSelect.expand",
      "when": "editorTextFocus"
    },
    {
      "key": "ctrl+shift+right",
      "command": "-editor.action.smartSelect.expand",
      "when": "editorTextFocus"
    },
    {
      "key": "shift+cmd+b",
      "command": "-workbench.action.tasks.build",
      "when": "taskCommandsRegistered"
    },
    {
      "key": "shift+cmd+b",
      "command": "workbench.action.debug.stop",
      "when": "inDebugMode && !focusedSessionIsAttach"
    },
    {
      "key": "shift+f5",
      "command": "-workbench.action.debug.stop",
      "when": "inDebugMode && !focusedSessionIsAttach"
    },
    {
      "key": "cmd+e",
      "command": "-editor.action.toggleScreenReaderAccessibilityMode",
      "when": "accessibilityHelpIsShown"
    },
    {
      "key": "cmd+e",
      "command": "merge.goToNextUnhandledConflict"
    },
    {
      "key": "shift+cmd+t",
      "command": "-workbench.action.reopenClosedEditor"
    },
    {
      "key": "shift+cmd+t",
      "command": "workbench.action.newWindowTab"
    },
    {
      "key": "shift+, shift+,",
      "command": "workbench.action.moveEditorLeftInGroup",
      "when": "!parameterHintsVisible && !quickFixWidgetVisible && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible && vim.mode == 'Normal' && editorFocus"
    },
    {
      "key": "cmd+k shift+cmd+left",
      "command": "-workbench.action.moveEditorLeftInGroup"
    },
    {
      "key": "shift+. shift+.",
      "command": "workbench.action.moveEditorRightInGroup",
      "when": "!parameterHintsVisible && !quickFixWidgetVisible && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible && vim.mode == 'Normal' && editorFocus"
    },
    {
      "key": "cmd+shift+i",
      "command": "workbench.action.tasks.runTask",
      "args": "All steps"
    },
    {
      "key": "cmd+shift+u",
      "command": "workbench.action.tasks.runTask",
      "args": "All steps (easy mode)"
    },
    {
      "key": "cmd+k shift+cmd+right",
      "command": "-workbench.action.moveEditorRightInGroup"
    },
    {
      "key": "shift+cmd+/",
      "command": "dart.openDevToolsInspector"
    },
    {
      "key": "escape",
      "command": "-search.action.focusQueryEditorWidget",
      "when": "inSearchEditor"
    },
    {
      "key": "shift+cmd+v",
      "command": "-markdown.showPreview",
      "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
      "key": "shift+cmd+v",
      "command": "-notebook.cell.pasteAbove",
      "when": "notebookEditorFocused && !inputFocus"
    },
    {
      "key": "shift+r",
      "command": "workbench.action.replaceInFiles",
      "when": "vim.mode == 'Normal' && !parameterHintsVisible && !quickFixWidgetVisible && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible"
    },
    {
      "key": "shift+cmd+h",
      "command": "-workbench.action.replaceInFiles"
    },
    {
      "key": "shift+cmd+=",
      "command": "workbench.action.increaseViewWidth"
    },
    {
      "key": "shift+cmd+-",
      "command": "-workbench.action.zoomOut"
    },
    {
      "key": "shift+cmd+-",
      "command": "workbench.action.decreaseViewWidth"
    },
    {
      "key": "cmd+k cmd+right",
      "command": "-workbench.action.focusRightGroup"
    },
    {
      "key": "ctrl+cmd+right",
      "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
      "key": "cmd+k alt+cmd+right",
      "command": "-workbench.action.nextEditorInGroup"
    },
    {
      "key": "cmd+k cmd+left",
      "command": "-workbench.action.focusLeftGroup"
    },
    {
      "key": "shift+cmd+0",
      "command": "workbench.action.splitEditorRight"
    },
    {
      "key": "cmd+k cmd+\\",
      "command": "-workbench.action.splitEditorRight"
    },
    {
      "key": "shift+cmd+w",
      "command": "-workbench.action.closeWindow"
    },
    {
      "key": "shift+cmd+w",
      "command": "workbench.action.closeEditorsAndGroup"
    },
    {
      "key": "shift+cmd+l",
      "command": "-notebook.selectAllFindMatches",
      "when": "config.notebook.multiCursor.enabled && notebookFindWidgetFocused || config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
    },
    {
      "key": "shift+cmd+l",
      "command": "-selectAllSearchEditorMatches",
      "when": "inSearchEditor"
    },
    {
      "key": "shift+cmd+l",
      "command": "-editor.action.selectHighlights",
      "when": "editorFocus"
    },
    {
      "key": "shift+cmd+l",
      "command": "-addCursorsAtSearchResults",
      "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
      "key": "shift+cmd+h",
      "command": "workbench.action.focusLeftGroup"
    },
    {
      "key": "shift+cmd+l",
      "command": "workbench.action.focusRightGroup"
    },
    {
      "key": "cmd+]",
      "command": "-editor.action.indentLines",
      "when": "editorTextFocus && !editorReadonly"
    },
    {
      "key": "up",
      "command": "-cursorUp",
      "when": "textInputFocus"
    },
    {
      "key": "down",
      "command": "-list.focusDown",
      "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
      "key": "down",
      "command": "list.focusDown",
      "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
      "key": "ctrl+n",
      "command": "-list.focusDown",
      "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
      "key": "ctrl+n",
      "command": "-selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
      "key": "up",
      "command": "workbench.action.quickOpenSelectPrevious",
      "when": "inQuickOpen"
    },
    {
      "key": "ctrl+p",
      "command": "-workbench.action.quickOpenSelectPrevious",
      "when": "inQuickOpen"
    },
    {
      "key": "up",
      "command": "cursorUp",
      "when": "textInputFocus"
    },
    {
      "key": "ctrl+p",
      "command": "-cursorUp",
      "when": "textInputFocus"
    },
    {
      "key": "up",
      "command": "extension.vim_ctrl+p",
      "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
      "key": "ctrl+p",
      "command": "-extension.vim_ctrl+p",
      "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
      "key": "up",
      "command": "list.focusUp",
      "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
      "key": "ctrl+p",
      "command": "-list.focusUp",
      "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
      "key": "ctrl+p",
      "command": "-selectPrevCodeAction",
      "when": "codeActionMenuVisible"
    },
    {
      "key": "up",
      "command": "selectPrevSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
      "key": "ctrl+p",
      "command": "-selectPrevSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
      "key": "up",
      "command": "showPrevParameterHint",
      "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
      "key": "ctrl+p",
      "command": "-showPrevParameterHint",
      "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
      "key": "shift+cmd+i",
      "command": "-workbench.action.chat.openEditSession",
      "when": "chatEditingParticipantRegistered && chatIsEnabled && view != 'workbench.panel.chat.view.edits'"
    },
    {
      "key": "shift+cmd+u",
      "command": "-workbench.action.output.toggleOutput",
      "when": "workbench.panel.output.active"
    },
    {
      "key": "cmd+y",
      "command": "workbench.action.chat.open"
    },
    {
      "key": "ctrl+cmd+i",
      "command": "-workbench.action.chat.open"
    }
  ]
  